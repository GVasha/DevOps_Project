{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\grego\\\\Desktop\\\\DevOps Insurance\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authAPI } from '../services/api';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // Check if user is logged in on app start\n  useEffect(() => {\n    const initializeAuth = async () => {\n      const token = localStorage.getItem('authToken');\n      const userData = localStorage.getItem('user');\n      if (token && userData) {\n        try {\n          // Verify token is still valid\n          const response = await authAPI.getProfile();\n          setUser(response.data.user);\n          setIsAuthenticated(true);\n        } catch (error) {\n          // Token is invalid, clear storage\n          localStorage.removeItem('authToken');\n          localStorage.removeItem('user');\n          setUser(null);\n          setIsAuthenticated(false);\n        }\n      }\n      setLoading(false);\n    };\n    initializeAuth();\n  }, []);\n  const login = async (email, password) => {\n    try {\n      setLoading(true);\n      const response = await authAPI.login({\n        email,\n        password\n      });\n      const {\n        user: userData,\n        token\n      } = response.data;\n\n      // Store token and user data\n      localStorage.setItem('authToken', token);\n      localStorage.setItem('user', JSON.stringify(userData));\n      setUser(userData);\n      setIsAuthenticated(true);\n      toast.success('Login successful!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Login failed';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n  const register = async userData => {\n    try {\n      setLoading(true);\n      const response = await authAPI.register(userData);\n      const {\n        user: newUser,\n        token\n      } = response.data;\n\n      // Store token and user data\n      localStorage.setItem('authToken', token);\n      localStorage.setItem('user', JSON.stringify(newUser));\n      setUser(newUser);\n      setIsAuthenticated(true);\n      toast.success('Registration successful!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Registration failed';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('user');\n    setUser(null);\n    setIsAuthenticated(false);\n    toast.success('Logged out successfully');\n  };\n  const updateProfile = async userData => {\n    try {\n      setLoading(true);\n      const response = await authAPI.updateProfile(userData);\n      const updatedUser = response.data.user;\n      localStorage.setItem('user', JSON.stringify(updatedUser));\n      setUser(updatedUser);\n      toast.success('Profile updated successfully!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const message = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || 'Profile update failed';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n  const deleteAccount = async () => {\n    try {\n      setLoading(true);\n      await authAPI.deleteAccount();\n\n      // Clear local storage and state\n      localStorage.removeItem('authToken');\n      localStorage.removeItem('user');\n      setUser(null);\n      setIsAuthenticated(false);\n      toast.success('Account deleted successfully');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      const message = ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.error) || 'Account deletion failed';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n  const value = {\n    user,\n    loading,\n    isAuthenticated,\n    login,\n    register,\n    logout,\n    updateProfile,\n    deleteAccount\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"xBgiRagNfQVCfEr2dT2PptfN+TE=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authAPI","toast","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","isAuthenticated","setIsAuthenticated","initializeAuth","token","localStorage","getItem","userData","response","getProfile","data","error","removeItem","login","email","password","setItem","JSON","stringify","success","_error$response","_error$response$data","message","register","newUser","_error$response2","_error$response2$data","logout","updateProfile","updatedUser","_error$response3","_error$response3$data","deleteAccount","_error$response4","_error$response4$data","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/grego/Desktop/DevOps Insurance/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { authAPI } from '../services/api';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  // Check if user is logged in on app start\r\n  useEffect(() => {\r\n    const initializeAuth = async () => {\r\n      const token = localStorage.getItem('authToken');\r\n      const userData = localStorage.getItem('user');\r\n\r\n      if (token && userData) {\r\n        try {\r\n          // Verify token is still valid\r\n          const response = await authAPI.getProfile();\r\n          setUser(response.data.user);\r\n          setIsAuthenticated(true);\r\n        } catch (error) {\r\n          // Token is invalid, clear storage\r\n          localStorage.removeItem('authToken');\r\n          localStorage.removeItem('user');\r\n          setUser(null);\r\n          setIsAuthenticated(false);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    initializeAuth();\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await authAPI.login({ email, password });\r\n      \r\n      const { user: userData, token } = response.data;\r\n      \r\n      // Store token and user data\r\n      localStorage.setItem('authToken', token);\r\n      localStorage.setItem('user', JSON.stringify(userData));\r\n      \r\n      setUser(userData);\r\n      setIsAuthenticated(true);\r\n      \r\n      toast.success('Login successful!');\r\n      return { success: true };\r\n      \r\n    } catch (error) {\r\n      const message = error.response?.data?.error || 'Login failed';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await authAPI.register(userData);\r\n      \r\n      const { user: newUser, token } = response.data;\r\n      \r\n      // Store token and user data\r\n      localStorage.setItem('authToken', token);\r\n      localStorage.setItem('user', JSON.stringify(newUser));\r\n      \r\n      setUser(newUser);\r\n      setIsAuthenticated(true);\r\n      \r\n      toast.success('Registration successful!');\r\n      return { success: true };\r\n      \r\n    } catch (error) {\r\n      const message = error.response?.data?.error || 'Registration failed';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('authToken');\r\n    localStorage.removeItem('user');\r\n    setUser(null);\r\n    setIsAuthenticated(false);\r\n    toast.success('Logged out successfully');\r\n  };\r\n\r\n  const updateProfile = async (userData) => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await authAPI.updateProfile(userData);\r\n      \r\n      const updatedUser = response.data.user;\r\n      localStorage.setItem('user', JSON.stringify(updatedUser));\r\n      setUser(updatedUser);\r\n      \r\n      toast.success('Profile updated successfully!');\r\n      return { success: true };\r\n      \r\n    } catch (error) {\r\n      const message = error.response?.data?.error || 'Profile update failed';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const deleteAccount = async () => {\r\n    try {\r\n      setLoading(true);\r\n      await authAPI.deleteAccount();\r\n      \r\n      // Clear local storage and state\r\n      localStorage.removeItem('authToken');\r\n      localStorage.removeItem('user');\r\n      setUser(null);\r\n      setIsAuthenticated(false);\r\n      \r\n      toast.success('Account deleted successfully');\r\n      return { success: true };\r\n      \r\n    } catch (error) {\r\n      const message = error.response?.data?.error || 'Account deletion failed';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    isAuthenticated,\r\n    login,\r\n    register,\r\n    logout,\r\n    updateProfile,\r\n    deleteAccount,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}